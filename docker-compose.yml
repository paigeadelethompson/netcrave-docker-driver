version: '3.8'

services:
  ca:
    image: paigeadele/compose-certificate-roller
    command:
      - /bin/sh 
      - -c 
      - |
        easyrsa init-pki
        easyrsa build-ca nopass
        cp -r /etc/ssl/* /certificatemgr
        cp -r /etc/ssl/* /davfs
        cp -r /etc/ssl/* /haproxy
        cp -r /etc/ssl/* /acme
        cp -r /etc/ssl/* /squid
        cp -r /etc/ssl/* /fluent
        cp -r /etc/ssl/* /icap
        cp -r /etc/ssl/* /haproxycfg
        cp -r /etc/ssl/* /ipam
        cp -r /etc/ssl/* /ifconfig
        cp /ca/private/ca.crt /certificatemgr/certs
        cp /ca/private/ca.crt /davfs/certs
        cp /ca/private/ca.crt /haproxy/certs
        cp /ca/private/ca.crt /acme/certs
        cp /ca/private/ca.crt /squid/certs
        cp /ca/private/ca.crt /icap/certs
        cp /ca/private/ca.crt /haproxycfg/certs
        easyrsa gen-req certificatemgr nopass
        easyrsa gen-req davfs nopass
        easyrsa gen-req haproxy nopass
        easyrsa gen-req acme nopass
        easyrsa gen-req squid nopass
        easyrsa gen-req fluent nopass
        easyrsa gen-req icap nopass
        easyrsa gen-req haproxycfg nopass     
        easyrsa sign-req server certificatemgr nopass
        easyrsa sign-req client davfs nopass
        easyrsa sign-req server haproxy nopass
        easyrsa sign-req server acme nopass
        easyrsa sign-req server squid nopass
        easyrsa sign-req server fluent nopass
        easyrsa sign-req server icap nopass
        easyrsa sign-req server haproxycfg nopass
        cp /ca/private/issued/certificatemgr.crt /certificatemgr/
        cp /ca/private/issued/davfs.crt /davfs/
        cp /ca/private/issued/haproxy.crt /haproxy/
        cp /ca/private/issued/acme.crt /acme/
        cp /ca/private/issued/squid.crt /squid/
        cp /ca/private/issued/fluent.crt /fluent/
        cp /ca/private/issued/icap.crt /icap/
        cp /ca/private/issued/haproxycfg.crt /haproxycfg/                
        cp /ca/private/private/certificatemgr.key /certificatemgr/
        cp /ca/private/private/davfs.key /davfs/
        cp /ca/private/private/haproxy.key /haproxy/
        cp /ca/private/private/acme.key /acme/
        cp /ca/private/private/squid.key /squid/
        cp /ca/private/private/fluent.key /fluent/
        cp /ca/private/private/icap.key /icap/
        cp /ca/private/private/haproxycfg.key /haproxycfg/
        cat /haproxy/haproxy.key > /haproxy/crt_and_key.pem
        cat /haproxy/haproxy.crt >> /haproxy/crt_and_key.pem
    volumes:
      - ca_easyrsa:/ca/private
      - ipam_ssl:/ipam
      - ifconfig_ssl:/ifconfig
      - certificatemgr_ssl:/certificatemgr
      - davfs_ssl:/davfs
      - haproxy_ssl:/haproxy
      - acme_ssl:/acme
      - squid_ssl:/squid
      - fluent_ssl:/fluent
      - icap_ssl:/icap
      - haproxycfg_ssl:/haproxycfg
  cockroach-ca:
    depends_on:
        ca:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-ca --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-client-ca:
    depends_on:
        cockroach-ca:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-client-ca --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key --allow-ca-key-reuse
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-tenant-client-ca:
    depends_on:
        cockroach-client-ca:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-tenant-client-ca --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key --allow-ca-key-reuse
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-node:
    depends_on:
        cockroach-tenant-client-ca:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-node --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key \
            localhost 127.0.0.1 2001:db8:aaaa:aabc:192:0:0:34 192.0.0.34 localhost *.local
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-root:
    depends_on:
        cockroach-node:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-client --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key root
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-ipam:
    depends_on:
        cockroach-root:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-client --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key ipam
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-ifconfig:
    depends_on:
        cockroach-ipam:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-client --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key ifconfig
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-dnsd:
    depends_on:
        cockroach-ifconfig:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-client --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key dnsd
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-certificatemgr:
    depends_on:
        cockroach-dnsd:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-client --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key certificatemgr
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-acme:
    depends_on:
        cockroach-certificatemgr:        
            condition: service_completed_successfully  
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: |
            cert create-client --certs-dir /cockroach/certs --ca-key /cockroach/certs/ca.key acme
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach-copy-certs:
    depends_on:
        cockroach-acme:        
            condition: service_completed_successfully  
    image: debian
    command: 
        - /bin/sh
        - -c 
        - |
            cp /cockroach/certs/client.ipam.* /ipam ; cp /cockroach/certs/ca.crt /ipam/crdb.ca.crt
            cp /cockroach/certs/client.ifconfig.* /ifconfig ; cp /cockroach/certs/ca.crt /ipam/crdb.ca.crt
    volumes:
        - ipam_ssl:/ipam
        - ifconfig_ssl:/ifconfig
        - certificatemgr_ssl:/certificatemgr
        - davfs_ssl:/davfs
        - haproxy_ssl:/haproxy
        - acme_ssl:/acme
        - squid_ssl:/squid
        - fluent_ssl:/fluent
        - icap_ssl:/icap
        - haproxycfg_ssl:/haproxycfg
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  cockroach:
    depends_on:
        cockroach-copy-certs:
            condition: service_completed_successfully        
    image: netcrave:cockroach
    build:
      context: .
      dockerfile: ./docker/cockroach/Dockerfile
    command: "start-single-node --certs-dir /cockroach/certs --listen-addr=:26257"
    networks:
      netcrave-docker-driver-cockroach:
        ipv4_address: 192.0.0.34
        ipv6_address: 2001:db8:aaaa:aabc:192:0:0:34
    volumes:
        - crdb:/cockroach/cockroach-data
        - crdb_ssl:/cockroach/certs
  netcrave-image:
    image: netcrave
    build:
      context: .
      args:
        DEBIAN_RELEASE: ${DEBIAN_RELEASE}
      dockerfile: ./docker/netcrave/Dockerfile
  netcrave-docker-image:
    depends_on:
        netcrave-image:        
            condition: service_completed_successfully
    image: netcrave:docker
    build:
      context: .
      dockerfile: ./docker/netcrave-docker/Dockerfile
  ipam:
    depends_on:
        netcrave-docker-image:        
            condition: service_completed_successfully
    image: netcrave:ipam
    build:
      context: .
      dockerfile: ./docker/ipam/Dockerfile
    environment:
      DB_CONNECT_STRING: ${IPAM_DB_CONNECT_STRING}
    networks:
      netcrave-docker-driver-ipam:
        ipv4_address: 192.0.0.2
        ipv6_address: 2001:db8:aaaa:aaaa:192:0:0:2
    volumes:
      - /run/netcrave/docker/ifconfig
      - ipam_ssl:/etc/ssl
  ifconfig:
    depends_on:
        netcrave-docker-image:
            condition: service_completed_successfully        
    image: netcrave:ifconfig
    build:
      context: .
      dockerfile: ./docker/ifconfig/Dockerfile
    networks:
      netcrave-docker-driver-ifconfig:
        ipv4_address: 192.0.0.6
        ipv6_address: 2001:db8:aaaa:aaab:192:0:0:6
    volumes:
      - /run/netcrave/docker/ifconfig
      - ifconfig_ssl:/etc/ssl
  haproxycfg:
    depends_on:
        netcrave-docker-image:
            condition: service_completed_successfully        
    image: netcrave:haproxycfg
    build:
      context: .
      dockerfile: ./docker/haproxycfg/Dockerfile
    networks:
      netcrave-docker-driver-haproxycfg:
        ipv4_address: 192.0.0.10
        ipv6_address: 2001:db8:aaaa:aaac:192:0:0:10
    volumes:
        - haproxycfg_ssl:/etc/ssl
  certificatemgr:
    depends_on:
        netcrave-docker-image:
            condition: service_completed_successfully        
    image: netcrave:certificatemgr
    build:
      context: .
      dockerfile: ./docker/certificatemgr/Dockerfile
    environment:
      DB_CONNECT_STRING: ${IPAM_DB_CONNECT_STRING}
      HTTP_PROXY: http://[2001:db8:aaaa:aabb:192:0:0:30]:3128
      HTTPS_PROXY: http://[2001:db8:aaaa:aabb:192:0:0:30]:3128
    networks:
      netcrave-docker-driver-certificatemgr:
        ipv4_address: 192.0.0.14
        ipv6_address: 2001:db8:aaaa:aaad:192:0:0:14
    volumes: 
        - certificatemgr_ssl:/etc/ssl
  dnsd:
    depends_on:
        netcrave-docker-image:
            condition: service_completed_successfully        
    image: netcrave:dnsd
    build:
      context: .
      dockerfile: ./docker/dnsd/Dockerfile
    networks:
      netcrave-docker-driver-dnsd:
        ipv4_address: 192.0.0.18
        ipv6_address: 2001:db8:aaaa:aaae:192:0:0:18
    volumes:
        - dnsd_ssl:/etc/ssl
  icap:
    depends_on:
        netcrave-docker-image:
            condition: service_completed_successfully        
    image: netcrave:icap
    build:
      context: .
      dockerfile: ./docker/icap/Dockerfile
    networks:
      netcrave-docker-driver-icap:
        ipv4_address: 192.0.0.22
        ipv6_address: 2001:db8:aaaa:aaaf:192:0:0:22
    volumes:
        - icap_ssl:/etc/ssl
  haproxy:
    depends_on:
        netcrave-image:
            condition: service_completed_successfully        
    image: netcrave:haproxy
    command: 
        - haproxy
        - -f 
        - /docker/haproxy/templates/etc/haproxy/haproxy.cfg
    build:
      context: .
      args:
        ADMIN_SOCKET_ADDR: "[2001:db8:aaaa:aaba:192:0:0:26]:23"
      dockerfile: ./docker/haproxy/Dockerfile
    networks:
      netcrave-docker-driver-haproxy:
        ipv4_address: 192.0.0.26
        ipv6_address: 2001:db8:aaaa:aaba:192:0:0:26
    volumes:
        - haproxy_ssl:/etc/ssl
  squid:
    depends_on:
        netcrave-image:
            condition: service_completed_successfully        
    image: netcrave:squid
    build:
      context: .
      args:
        TEMPLATE_ROOT: ./docker/squid/templates
      dockerfile: ./docker/squid/Dockerfile
    networks:
      netcrave-docker-driver-squid:
        ipv4_address: 192.0.0.30
        ipv6_address: 2001:db8:aaaa:aabb:192:0:0:30
    volumes: 
        - squid_ssl:/etc/ssl
  fluentd:
    depends_on:
        netcrave-image:
            condition: service_completed_successfully        
    image: netcrave:fluentd
    build:
      context: .
      dockerfile: ./docker/fluentd/Dockerfile
    networks:
      netcrave-docker-driver-fluentd:
        ipv4_address: 192.0.0.38
        ipv6_address: 2001:db8:aaaa:aabd:192:0:0:38
    volumes:
        - fluent_ssl:/etc/ssl
  davfs:
    depends_on:
        netcrave-image:
            condition: service_completed_successfully        
    image: netcrave:davfs
    build:
      context: .
      dockerfile: ./docker/davfs/Dockerfile
    networks:
      netcrave-docker-driver-davfs:
        ipv4_address: 192.0.0.42
        ipv6_address: 2001:db8:aaaa:aabe:192:0:0:42
    volumes:
        - davfs_ssl:/etc/ssl
  acme:
    depends_on:
        netcrave-image:
            condition: service_completed_successfully        
    image: netcrave:acme
    build:
      context: .
      dockerfile: ./docker/davfs/Dockerfile
    networks:
      netcrave-docker-driver-acme:
        ipv4_address: 192.0.0.46
        ipv6_address: 2001:db8:aaaa:aabf:192:0:0:46
    volumes:
        - acme_ssl:/etc/ssl
networks:
  netcrave-docker-driver-ipam:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.0/30
        - subnet: 2001:db8:aaaa:aaaa::/64
  netcrave-docker-driver-ifconfig:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.4/30
        - subnet: 2001:db8:aaaa:aaab::/64
  netcrave-docker-driver-haproxycfg:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.8/30
        - subnet: 2001:db8:aaaa:aaac::/64
  netcrave-docker-driver-certificatemgr:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.12/30
        - subnet: 2001:db8:aaaa:aaad::/64
  netcrave-docker-driver-dnsd:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.16/30
        - subnet: 2001:db8:aaaa:aaae::/64
  netcrave-docker-driver-icap:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.20/30
        - subnet: 2001:db8:aaaa:aaaf::/64
  netcrave-docker-driver-haproxy:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.24/30
        - subnet: 2001:db8:aaaa:aaba::/64
  netcrave-docker-driver-squid:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.28/30
        - subnet: 2001:db8:aaaa:aabb::/64
  netcrave-docker-driver-cockroach:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.32/30
        - subnet: 2001:db8:aaaa:aabc::/64
  netcrave-docker-driver-fluentd:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.36/30
        - subnet: 2001:db8:aaaa:aabd::/64
  netcrave-docker-driver-davfs:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.40/30
        - subnet: 2001:db8:aaaa:aabe::/64
  netcrave-docker-driver-acme:
    enable_ipv6: true
    ipam:
      config:
        - subnet: 192.0.0.44/30
        - subnet: 2001:db8:aaaa:aabf::/64

volumes:
    ca_easyrsa:
    certificatemgr_ssl:
    davfs_ssl:
    haproxy_ssl:
    acme_ssl:
    dnsd_ssl:
    squid_ssl:
    crdb_ssl:
    crdb:
    crdb_ca_key:
    crdb_ca_easyrsa:
    fluent_ssl:
    icap_ssl:
    haproxycfg_ssl:
    ipam_ssl:
    ifconfig_ssl:
